name: Publish App Docker Image

on:
  push:
    branches:
      - main
      - samaple-apps
    paths:
      - '**'
      - '!kurl-installer.yaml'
      - '!**.md'
      - '!images/**'
      - '!**.png'

jobs:
  discover-apps:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4.0.0
        with:
          fetch-depth: 0
      - name: Discover apps (directories with pyproject.toml)
        id: set-matrix
        shell: bash
        run: |
          set -eo pipefail
          mapfile -t files < <(git ls-files -- '**/pyproject.toml' 'pyproject.toml' | sed 's|^./||' || true)
          if [ ${#files[@]} -eq 0 ]; then
            echo 'matrix=[]' >> "$GITHUB_OUTPUT"
            exit 0
          fi
          json="["
          for f in "${files[@]}"; do
            dir=$(dirname "$f")
            if [ "$dir" = "." ]; then
              name="root"
              path="."
            else
              name=$(basename "$dir")
              path="$dir"
            fi
            json="$json{\"name\":\"$name\",\"path\":\"$path\"},"
          done
          json="${json%,}"
          json="$json]"
          echo "matrix=$json" >> "$GITHUB_OUTPUT"
      - name: Show discovered apps
        run: echo '${{ steps.set-matrix.outputs.matrix }}'
  build:
    runs-on: ubuntu-latest
    needs: discover-apps
    strategy:
      fail-fast: false
      matrix:
        app: ${{ fromJson(needs.discover-apps.outputs.matrix) }}
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
    timeout-minutes: 20  # Increased from 10 to handle multi-platform builds
    steps:
      - uses: actions/checkout@v4.0.0
        with:
          fetch-depth: 0

      - name: Get branch name
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
        id: get_branch

      - run: echo "REPOSITORY_NAME=`echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//"`" >> $GITHUB_ENV
        shell: bash

      - name: Get version tag
        run: echo "version=$(echo `git ls-remote https://${{ secrets.ORG_PAT_GITHUB }}@github.com/atlanhq/${REPOSITORY_NAME}.git ${{ steps.get_branch.outputs.branch }} | awk '{ print $1}' | cut -c1-7`)abcd" >> $GITHUB_OUTPUT
        id: get_version

      - name: Lowercase branch name
        run: echo "lowercase_branch=$(echo '${{ steps.get_branch.outputs.branch }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
        id: get_lowercase_branch

      - name: Set up Buildx
        id: buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0 https://github.com/docker/setup-buildx-action/releases/tag/v3.10.0

      - name: Login to GitHub Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0 https://github.com/docker/login-action/releases/tag/v3.4.0
        with:
          registry: ghcr.io
          username: $GITHUB_ACTOR
          password: ${{ secrets.ORG_PAT_GITHUB }}

      - name: Build and push docker image to GHCR
        id: ghcr_docker_build
        uses: docker/build-push-action@1dc73863535b631f98b2378be8619f83b136f4a0 # v6.17.0 https://github.com/docker/build-push-action/releases/tag/v6.17.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/atlanhq/${{ github.event.repository.name }}-${{ matrix.app.name }}-${{ steps.get_lowercase_branch.outputs.lowercase_branch }}:latest
            ghcr.io/atlanhq/${{ github.event.repository.name }}-${{ matrix.app.name }}-${{ steps.get_lowercase_branch.outputs.lowercase_branch }}:${{ steps.get_version.outputs.version }}
          build-args: |
            ACCESS_TOKEN_USR=$GITHUB_ACTOR
            ACCESS_TOKEN_PWD=${{ secrets.ORG_PAT_GITHUB }}
            APP_PATH=${{ matrix.app.path }}
        env:
          DOCKER_CLIENT_TIMEOUT: 600  # Increased timeout
          COMPOSE_HTTP_TIMEOUT: 600

      # Add Docker Hub login
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: atlanhq
          password: ${{ secrets.DOCKER_HUB_PAT_RW }}

      - name: Build and push docker image to Docker Hub
        id: docker_build
        uses: docker/build-push-action@1dc73863535b631f98b2378be8619f83b136f4a0 # v6.17.0 https://github.com/docker/build-push-action/releases/tag/v6.17.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            registry-1.docker.io/atlanhq/${{ github.event.repository.name }}-${{ matrix.app.name }}:${{ steps.get_branch.outputs.branch }}-${{ steps.get_version.outputs.version }}
            registry-1.docker.io/atlanhq/${{ github.event.repository.name }}-${{ matrix.app.name }}:${{ steps.get_branch.outputs.branch }}-latest
          build-args: |
            ACCESS_TOKEN_USR=$GITHUB_ACTOR
            ACCESS_TOKEN_PWD=${{ secrets.ORG_PAT_GITHUB }}
            APP_PATH=${{ matrix.app.path }}
        env:
          DOCKER_CLIENT_TIMEOUT: 300
          COMPOSE_HTTP_TIMEOUT: 300
