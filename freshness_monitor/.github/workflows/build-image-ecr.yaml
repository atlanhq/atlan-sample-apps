name: Publish App Docker Image

on:
  push:
    branches:
      - main
    paths:
      - '**'
      - '!kurl-installer.yaml'
      - '!**.md'
      - '!images/**'
      - '!**.png'

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4.0.0
        with:
          fetch-depth: 0

      - name: Get branch name
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
        id: get_branch

      - run: echo "REPOSITORY_NAME=`echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//"`" >> $GITHUB_ENV
        shell: bash

      - name: Get version tag
        run: echo "version=$(echo `git ls-remote https://${{ secrets.ORG_PAT_GITHUB }}@github.com/atlanhq/${REPOSITORY_NAME}.git ${{ steps.get_branch.outputs.branch }} | awk '{ print $1}' | cut -c1-7`)abcd" >> $GITHUB_OUTPUT
        id: get_version

      - name: Lowercase branch name
        run: echo "lowercase_branch=$(echo '${{ steps.get_branch.outputs.branch }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
        id: get_lowercase_branch

      - name: Set up Buildx
        id: buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0 https://github.com/docker/setup-buildx-action/releases/tag/v3.10.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build and push core docker image
        id: ghcr_docker_build
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0 https://github.com/docker/build-push-action/releases/tag/v6.15.0
        with:
          context: .
          file: ./install/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            public.ecr.aws/<orgname>/${{ github.event.repository.name }}-${{ steps.get_lowercase_branch.outputs.lowercase_branch }}:latest
            public.ecr.aws/orgname/${{ github.event.repository.name }}-${{ steps.get_lowercase_branch.outputs.lowercase_branch }}:${{ steps.get_version.outputs.version }}
          secrets: |
            PRIVATE_REPO_ACCESS_TOKEN=${{ secrets.ORG_PAT_GITHUB }}
          build-args: |
            ACCESS_TOKEN_USR=$GITHUB_ACTOR
            ACCESS_TOKEN_PWD=${{ secrets.ORG_PAT_GITHUB }}
        env:
          DOCKER_CLIENT_TIMEOUT: 300
          COMPOSE_HTTP_TIMEOUT: 300

      - name: Build and push argo docker image
        id: ghcr_docker_build_argo
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0 https://github.com/docker/build-push-action/releases/tag/v6.15.0
        with:
          context: .
          file: ./install/Dockerfile.Argo
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            public.ecr.aws/<orgname>/${{ github.event.repository.name }}-argo-${{ steps.get_lowercase_branch.outputs.lowercase_branch }}:latest
            public.ecr.aws/<orgname>/${{ github.event.repository.name }}-argo-${{ steps.get_lowercase_branch.outputs.lowercase_branch }}:${{ steps.get_version.outputs.version }}
          secrets: |
            PRIVATE_REPO_ACCESS_TOKEN=${{ secrets.ORG_PAT_GITHUB }}
          build-args: |
            BASE_IMAGE=public.ecr.aws/<orgname>/${{ github.event.repository.name }}-${{ steps.get_lowercase_branch.outputs.lowercase_branch }}:latest
            ACCESS_TOKEN_USR=$GITHUB_ACTOR
            ACCESS_TOKEN_PWD=${{ secrets.ORG_PAT_GITHUB }}
        env:
          DOCKER_CLIENT_TIMEOUT: 300
          COMPOSE_HTTP_TIMEOUT: 300
