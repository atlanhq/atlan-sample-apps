[project]
name = "atlan-anaplan-app"
version = "1.0.0"
description = "Atlan Anaplan App: Built using Atlan Application SDK"
authors = [{ name = "Atlan Apps Team", email = "apps@atlan.com" }]
requires-python = ">=3.11"
license = "Apache-2.0"
readme = "README.md"
dependencies = [
    "atlan-application-sdk[daft,iam-auth,pandas,sqlalchemy,tests,workflows]==0.1.1rc51",
    "psycopg[binary]>=3.2.3",
    "jinja2>=3.1.2",
    "poethepoet>=0.34.0",
    "httpx>=0.27.0",
    "pandas>=2.0.0",
]

# If you have development dependencies, you can add them like this:
[dependency-groups]
dev = [
    "pre-commit>=3.8.0",
    "isort>=5.13.2",
    "watchdog>=6.0.0",
    "requests",
    "pyright>=1.1.403",
    "ruff>=0.12.7",
]
test = [
    "pytest>=8.3.3",
    "coverage>=7.6.1",
    "scalene>=1.5.20",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.2.1",
]

[tool.poe.tasks]
# Dapr and Temporal service tasks
start-dapr = "dapr run --enable-api-logging --log-level debug --app-id app --app-port 3000 --dapr-http-port 3500 --dapr-grpc-port 50001 --dapr-http-max-request-size 1024 --resources-path components"
start-temporal = "temporal server start-dev --db-filename ./temporal.db"
start-deps.shell = "poe start-dapr & poe start-temporal &"
stop-deps.shell = "lsof -ti:3000,3500,7233,50001 | xargs kill -9 2>/dev/null || true"

[tool.poe.tasks.download-components]
interpreter = "python"
env = { SDK_VERSION = "v0.1.1rc51" }
shell = """
import pathlib, requests, os

components_dir = pathlib.Path("components")
components_dir.mkdir(exist_ok=True)

api_url = "https://api.github.com/repos/atlanhq/application-sdk/contents/components"

response = requests.get(api_url, params={"ref": os.getenv("SDK_VERSION")})
response.raise_for_status()

for file_info in response.json():
    if file_info["type"] == "file" and file_info["name"].endswith(".yaml"):
        raw_url = file_info["download_url"]

        file_response = requests.get(raw_url)
        file_response.raise_for_status()

        file_path = components_dir / file_info["name"]
        file_path.write_text(file_response.text)
        print(f"Downloaded: {file_info['name']}")
"""

[tool.hatch.build.targets.sdist]
include = ["./**/*.py"]

[tool.hatch.build.targets.wheel]
include = ["./**/*.py"]
packages = [
    "app",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pyright]
venvPath = "."
venv = ".venv"
typeCheckingMode = "standard"
exclude = [
    ".github/**",
]
reportMissingTypeStubs = false

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.coverage.run]
omit = [
    "tests/**",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
fail_under = 60

# [tool.uv.sources]
# atlan-application-sdk = { path = "../application-sdk", editable = true }
# atlan-application-sdk = { git = "https://github.com/atlanhq/application-sdk", rev = "8875152c1977ec65834c06ab1b07bf3003e9dc8c" }
